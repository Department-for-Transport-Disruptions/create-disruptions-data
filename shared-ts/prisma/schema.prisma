generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x"]
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Disruption {
  id                       String        @id
  displayId                String        @map("display_id")
  orgId                    String        @map("org_id")
  summary                  String
  description              String
  disruptionReason         String        @map("disruption_reason")
  disruptionType           String        @map("disruption_type")
  publishStatus            PublishStatus @map("publish_status")
  publishStartDate         String        @map("publish_start_date")
  publishStartTime         String        @map("publish_start_time")
  publishEndDate           String?       @map("publish_end_date")
  publishEndTime           String?       @map("publish_end_time")
  disruptionStartDate      String        @map("disruption_start_date")
  disruptionStartTime      String        @map("disruption_start_time")
  disruptionEndDate        String?       @map("disruption_end_date")
  disruptionEndTime        String?       @map("disruption_end_time")
  disruptionNoEndDateTime  String?       @map("disruption_no_end_date_time")
  disruptionRepeats        String?       @map("disruption_repeats")
  disruptionRepeatsEndDate String?       @map("disruption_repeats_end_date")
  /// [PrismaValidity]
  validity                 Json[]
  createdByOperatorOrgId   String?       @map("created_by_operator_org_id")
  consequences             Consequence[]
  /// [PrismaSocialMedia]
  socialMediaPosts         Json[]        @map("social_media_posts")
  /// [PrismaHistory]
  history                  Json[]        @default([])
  permitReferenceNumber    String?       @map("permit_reference_number")
  associatedLink           String?       @map("associated_link")
  template                 Boolean       @default(false) @map("is_template")
  creationTime             DateTime      @default(now()) @map("creation_time")
  lastUpdated              DateTime      @updatedAt @map("last_updated")

  @@map("disruptions")
}

model Consequence {
  id                        Int         @id @default(autoincrement())
  disruption                Disruption  @relation(fields: [disruptionId], references: [id], onDelete: Cascade)
  disruptionId              String      @map("disruption_id")
  consequenceIndex          Int         @map("consequence_index")
  consequenceType           String      @map("consequence_type")
  description               String
  disruptionDelay           String?     @map("disruption_delay")
  disruptionDirection       String?     @map("disruption_direction")
  disruptionSeverity        Severity    @map("disruption_severity")
  removeFromJourneyPlanners String      @map("remove_from_journey_planners")
  vehicleMode               VehicleMode @map("vehicle_mode")
  /// [PrismaService]
  services                  Json[]      @default([])
  /// [PrismaStop]
  stops                     Json[]      @default([])
  /// [PrismaOperators]
  consequenceOperators      Json[]      @default([]) @map("consequence_operators")
  disruptionArea            String[]    @default([]) @map("disruption_area")
  /// [PrismaJourney]
  journeys                  Json[]      @default([])

  @@unique([disruptionId, consequenceIndex], name: "disruption_id_consequence_index")
  @@map("consequences")
}

model DisruptionEdited {
  id                       String              @id
  displayId                String              @map("display_id")
  orgId                    String              @map("org_id")
  summary                  String
  description              String
  disruptionReason         String              @map("disruption_reason")
  disruptionType           String              @map("disruption_type")
  publishStatus            PublishStatus       @map("publish_status")
  publishStartDate         String              @map("publish_start_date")
  publishStartTime         String              @map("publish_start_time")
  publishEndDate           String?             @map("publish_end_date")
  publishEndTime           String?             @map("publish_end_time")
  disruptionStartDate      String              @map("disruption_start_date")
  disruptionStartTime      String              @map("disruption_start_time")
  disruptionEndDate        String?             @map("disruption_end_date")
  disruptionEndTime        String?             @map("disruption_end_time")
  disruptionNoEndDateTime  String?             @map("disruption_no_end_date_time")
  disruptionRepeats        String?             @map("disruption_repeats")
  disruptionRepeatsEndDate String?             @map("disruption_repeats_end_date")
  /// [PrismaValidity]
  validity                 Json[]
  createdByOperatorOrgId   String?             @map("created_by_operator_org_id")
  consequences             ConsequenceEdited[]
  /// [PrismaSocialMedia]
  socialMediaPosts         Json[]              @map("social_media_posts")
  /// [PrismaHistory]
  history                  Json[]              @default([])
  permitReferenceNumber    String?             @map("permit_reference_number")
  associatedLink           String?             @map("associated_link")
  template                 Boolean             @default(false) @map("is_template")
  creationTime             DateTime            @default(now()) @map("creation_time")
  lastUpdated              DateTime            @updatedAt @map("last_updated")

  @@map("disruptions_edited")
}

model ConsequenceEdited {
  id                        Int              @id @default(autoincrement())
  disruption                DisruptionEdited @relation(fields: [disruptionId], references: [id], onDelete: Cascade)
  disruptionId              String           @map("disruption_id")
  consequenceIndex          Int              @map("consequence_index")
  consequenceType           String           @map("consequence_type")
  description               String
  disruptionDelay           String?          @map("disruption_delay")
  disruptionDirection       String?          @map("disruption_direction")
  disruptionSeverity        Severity         @map("disruption_severity")
  removeFromJourneyPlanners String           @map("remove_from_journey_planners")
  vehicleMode               VehicleMode      @map("vehicle_mode")
  /// [PrismaService]
  services                  Json[]           @default([])
  /// [PrismaStop]
  stops                     Json[]           @default([])
  /// [PrismaOperators]
  consequenceOperators      Json[]           @default([]) @map("consequence_operators")
  disruptionArea            String[]         @default([]) @map("disruption_area")
  /// [PrismaJourney]
  journeys                  Json[]           @default([])

  @@unique([disruptionId, consequenceIndex], name: "disruption_id_consequence_index")
  @@map("consequences_edited")
}

enum PublishStatus {
  DRAFT
  PUBLISHED
  EDITING
  PENDING_APPROVAL
  REJECTED
  EDIT_PENDING_APPROVAL
  PENDING_EDITING
}

enum VehicleMode {
  bus
  tram
  ferryService
  rail
  underground
  coach
}

enum Severity {
  unknown
  normal
  verySlight
  slight
  severe
  verySevere
}
