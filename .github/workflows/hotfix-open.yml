name: Hotfix opened

on:
  pull_request:
    types:
      - labeled

jobs:
  build:
    name: Build
    if: ${{ github.event.label.name == 'hotfix' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js and cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('src/pnpm-lock.yaml') }}
          restore-keys: |
              ${{ runner.os }}-pnpm-store-

      - name: Install packages
        run: pnpm i --frozen-lockfile

      - name: Set up Python 3.11.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.11

      - name: Install python packages
        working-directory: packages/txc-uploader
        run: pip install -r requirements.dev.txt

      - name: Lint
        run: pnpm run lint

      - name: Test TypeScript compiles
        run: pnpm run tsc:build

      - name: Test
        run: pnpm run test

  create_hotfix_release:
    needs: ['build']
    name: Create hotfix release
    if: ${{ github.event.label.name == 'hotfix' }}
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get Latest Release
        id: latest_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.head_ref }}
          name: Hotfix ${{ steps.latest_release.outputs.tag_name }}
          body: ${{ github.event.pull_request.title }}
          draft: true
